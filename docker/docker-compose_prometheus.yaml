version: '3'
volumes:
  prometheus_data: {}
  grafana_data: {}
  cadence_data: {}
services:
  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
  #  statsd:
  #    image: graphiteapp/graphite-statsd
  #    ports:
  #      - "8080:80"
  #      - "2003:2003"
  #      - "8125:8125"
  #      - "8126:8126"

#  zookeeper:
#    image: wurstmeister/zookeeper:3.4.6
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka:2.12-2.1.1
#    depends_on:
#      - zookeeper
#    ports:
#       - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  cadence:
    image: ubercadence/server:0.12.0-auto-setup
    ports:
      - "7933:7933"
      - "7934:7934"
      - "7935:7935"
      - "7939:7939"
      - "8005:8005"
    volumes:
      - ./cadence:/config/dynamicconfig_local
      - cadence_data:/cadence
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "DYNAMIC_CONFIG_FILE_PATH=/config/dynamicconfig_local/development_local.yaml"
      - "PROMETHEUS_ENDPOINT=$BIND_ON_IP:8005"
#      - "ES_SEEDS=elasticsearch"
#      - "ENABLE_ES=true"
#      - "KAFKA_SEEDS=kafka"
    depends_on:
      - cassandra
#      - elasticsearch
#      - kafka

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1
#    ports:
#      - "9200:9200"
#    environment:
#      - discovery.type=single-node
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana-oss:6.5.1
#    container_name: kibana
#    environment:
#      ELASTICSEARCH_HOSTS: http://localhost:9200
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch

  cadence-web:
    image: ubercadence/web:3.9.0
    environment:
      - "CADENCE_TCHANNEL_PEERS=cadence:7933"
    ports:
      - "8088:8088"
    depends_on:
      - cadence

  prometheus:
    image: prom/prometheus:v2.18.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    #    network_mode: host
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.7.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    labels:
      org.label-schema.group: "monitoring"